{"version":3,"file":"vue.js","sources":["../src/compiler/parse.js","../src/compiler/index.js","../src/lifecycle.js","../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`\nconst startTagOpen = new RegExp(`^<${qnameCapture}`) // 匹配到的分组是一个 标签名 <div 匹配到的是开始标签的名字\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`) // 匹配的是 </xxx> 最终匹配到的分组是结束标签的名字\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/ // 匹配属性，第一个分组是属性的key，value可能是分组3/分组4/分组5\nconst startTagClose = /^\\s*(\\/?)>/ // <div>  <br/>\n\nexport function parseHTML(html) {\n    const ELEMENT_TYPE = 1\n    const TEXT_TYPE = 3\n    const stark = [] // 用于存放元素\n    let currentParent // 指向栈中最后一个元素\n    let root // 根元素\n\n    // 需要转化成一颗抽象语法树\n\n    function createASTElement(tag, attrs) {\n        return {\n            tag,\n            type: ELEMENT_TYPE,\n            parent: null,\n            children: [],\n            attrs\n        }\n    }\n\n    function start(tag, attrs) {\n        let node = createASTElement(tag, attrs) // 创建一个ast节点\n        // 看一下是否是空树\n        if (!root) {\n            root = node // 如果为空树，则当前是树的根节点\n        }\n        if (currentParent) {\n            node.parent = currentParent\n            currentParent.children.push(node)\n        }\n\n        stark.push(node)\n        currentParent = node // currentParent为栈中最后一个\n    }\n    function chars(text) {\n        // 文本直接放到当前指向的节点中\n        text = text.replace(/\\s/g, '') // todo：如果空格超过2就删除2个以上的\n        text &&\n            currentParent.children.push({\n                type: TEXT_TYPE,\n                text,\n                parent: currentParent\n            })\n    }\n    function end(tag) {\n        let node = stark.pop() // 弹出最后一个, todo：可以和tag比较，校验标签是否合法\n        currentParent = stark[stark.length - 1]\n    }\n    function advance(n) {\n        html = html.substring(n)\n    }\n    function parseStartTag() {\n        const start = html.match(startTagOpen)\n        if (start) {\n            const match = {\n                tagName: start[1], //标签名\n                attrs: []\n            }\n            advance(start[0].length)\n\n            // 如果不是开始标签的闭合标签，就一致匹配下去（匹配属性）\n            let attr, end\n            while (\n                !(end = html.match(startTagClose)) &&\n                (attr = html.match(attribute))\n            ) {\n                advance(attr[0].length)\n                match.attrs.push({\n                    name: attr[1],\n                    value: attr[3] || attr[4] || attr[5]\n                })\n            }\n\n            if (end) {\n                advance(end[0].length)\n            }\n            return match\n        }\n\n        return false // 不是开始标签\n    }\n    while (html) {\n        // html最开始肯定是一个 <\n        // 如果textEnd 为0， 说明是一个开始标签活着结束标签\n        // 如果textEnd > 0，说明是文本结束的位置\n        let textEnd = html.indexOf('<') // 若果indexOf中的索引是0，则说明是个标签\n\n        if (textEnd === 0) {\n            const startTagMatch = parseStartTag()\n\n            if (startTagMatch) {\n                start(startTagMatch.tagName, startTagMatch.attrs)\n                // 解析到的开始标签\n                continue\n            }\n            let endTagMatch = html.match(endTag)\n            if (endTagMatch) {\n                advance(endTagMatch[0].length)\n                end(endTagMatch[1])\n                continue\n            }\n        }\n\n        if (textEnd > 0) {\n            let text = html.substring(0, textEnd) // 文本内容\n            if (text) {\n                advance(text.length) // 解析到的文本\n                chars(text)\n            }\n        }\n    }\n\n    return root\n}\n","import { parseHTML } from './parse'\n\nfunction genProps(attrs) {\n    let str = ''\n    for (let i = 0; i < attrs.length; i++) {\n        let attr = attrs[i]\n        if (attr.name === 'style') {\n            // 对样式属性进行处理 'color: red;background: white;'  -->  {color: 'red', background: 'white'}\n            let obj = {}\n            attr.value.split(';').forEach((item) => {\n                let [key, value] = item.split(':')\n                obj[key] = value\n            })\n            attr.value = obj\n        }\n        str += `${attr.name}:${JSON.stringify(attr.value)},`\n    }\n\n    return `{${str.slice(0, -1)}}`\n}\n\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g // {{ abc }} 匹配到的内容是表达式的变量\nfunction gen(node) {\n    if (node.type === 1) {\n        return codegen(node)\n    } else {\n        let text = node.text\n        if (!defaultTagRE.test(text)) {\n            return `_v(${JSON.stringify(text)})`\n        } else {\n            let tokens = []\n            let match\n            defaultTagRE.lastIndex = 0\n            let lastIndex = 0\n            while ((match = defaultTagRE.exec(text))) {\n                let index = match.index\n                if (index > lastIndex) {\n                    tokens.push(JSON.stringify(text.slice(lastIndex, index)))\n                }\n                tokens.push(`_s(${match[1].trim()})`)\n                lastIndex = index + match[0].length\n            }\n\n            if (lastIndex < text.length) {\n                tokens.push(JSON.stringify(text.slice(lastIndex)))\n            }\n\n            return `_v(${tokens.join('+')})`\n        }\n    }\n}\n\nfunction genChildren(el) {\n    const children = el.children\n    if (children) {\n        return children.map((child) => gen(child)).join(',')\n    }\n}\n\nfunction codegen(ast) {\n    let children = genChildren(ast)\n    let code = `_c('${ast.tag}', ${\n        ast.attrs.length > 0 ? genProps(ast.attrs) : 'null'\n    }${ast.children.length ? `,${children}` : ''})`\n    return code\n}\n\n// 对模版进行编译处理（vue3采用的不是使用正则）\nexport function compileToFunction(template) {\n    // 1.将template 转化成ast语法书\n    let ast = parseHTML(template)\n\n    // 2.生成render方法 （render方法执行后返回的结果就是 虚拟DOM）\n    // 模版引擎的实现原理：with + new Function\n    let code = codegen(ast)\n    code = `with(this){return ${code}}`\n    let render = new Function(code) // 根据相关代码生成render函数\n\n    return render\n}\n","export function initLifeCycle(Vue) {\n    Vue.prototype._update = function () {\n        console.log('update')\n    }\n    Vue.prototype._render = function () {\n        console.log('render')\n    }\n}\n\nexport function mountComponent(vm, el) {\n    // 1.调用render方法产生虚拟节点 虚拟DOM\n\n    vm._update(vm._render()) // vm.$options.render() 虚拟节点\n\n    // 2.根据虚拟DOM产生真实DOM\n\n    // 3.插入到el元素中\n}\n\n/**\n * vue核心流程：\n * 1. 创造了响应式数据\n * 2. 将模板转换成ast语法树\n * 3. 将ast语法树转换成了render函数\n * 4. 后续每次数据更新可以只执行render函数（无需再次执行ast转化的过程）\n * \n * render函数会产生虚拟节点（使用响应式数据）\n * 根据生成的虚拟节点创造真实DOM\n */\n","// 重写数组中的部分方法\n\nlet oldArrayProto = Array.prototype // 获取数组的原型\n\n// newArrayProto.__proto__ = oldArrayProto\nexport let newArrayProto = Object.create(oldArrayProto)\n\n// 找到所有的变异方法（会改变原数组）\nlet methods = ['push', 'pop', 'shift', 'unshift', 'reverse', 'sort', 'splice']\n\nmethods.forEach((method) => {\n    // 这里重写了数组的方法\n    newArrayProto[method] = function (...args) {\n        const result = oldArrayProto[method].call(this, ...args) // 内部调用原来的方法，函数的劫持，切片编程\n\n        // 需要对数据新增的数据再次进行劫持\n        let inserted\n        let ob = this.__ob__\n        switch (method) {\n            case 'push':\n            case 'unshift':\n                inserted = args\n                break\n            case 'splice':\n                inserted = args.slice(2)\n            default:\n                break\n        }\n        // console.log('ob', this) // 新增的内容\n        if (inserted) {\n            // 对新增的内容再次进行观测\n            ob.observeArray(inserted)\n        }\n\n        return result\n    }\n})\n","import { newArrayProto } from './array'\n\nclass Observer {\n    constructor(data) {\n        // Object.defineProperty 只能劫持已存在的属性（vue里面会为此单独写一些api  $set $delete）\n        Object.defineProperty(data, '__ob__', {\n            value: this,\n            enumerable: false // 将__ob__变成不可枚举（循环的时候无法获取）\n        })\n\n        // console.log('Observer', data)\n        // data.__ob__ = this // 给数组加了一个标识，如果数据上有__ob__则说明这个属性被观测过了\n        if (Array.isArray(data)) {\n            // 重写数组的方法\n\n            data.__proto__ = newArrayProto // 需要保留数组原有的特性，并且可以重写部分方法\n            this.observeArray(data) //如果数组中的元素是对象，可以监控到对象的变化\n        } else {\n            this.walk(data)\n        }\n    }\n    // 循环对象，对属性依次劫持\n    walk(data) {\n        // “重新定义”属性，性能差\n        Object.keys(data).forEach((key) => defineReactive(data, key, data[key]))\n    }\n    // 观测数组\n    observeArray(data) {\n        data.forEach((item) => observe(item))\n    }\n}\n\n// 属性劫持(闭包)\nexport function defineReactive(target, key, value) {\n    observe(value) // 深度劫持，对所有对象都进行属性劫持\n    Object.defineProperty(target, key, {\n        // 取值的时候，会执行get\n        get() {\n            console.log('get', key, value)\n            return value\n        },\n        // 修改的时候，会执行set\n        set(newValue) {\n            if (newValue === value) return // 如果修改的值和原来的值相同，直接返回\n            observe(newValue) // 如果修改的值是一个对象，对这个对象进行劫持\n            value = newValue\n        }\n    })\n}\n\n// 观测（劫持）data对象\nexport function observe(data) {\n    // 只对对象进行劫持\n    if (typeof data !== 'object' || data == null) {\n        return\n    }\n\n    // 这个对象已经被代理过\n    if (data.__ob__ instanceof Observer) {\n        return\n    }\n\n    // 如果一个对象被劫持过了，那就不需要再被劫持了（要判断一个对象是否被劫持过，可以添加一个实例，用实例来判断是够被劫持过）\n    return new Observer(data)\n}\n","import { observe } from './observe/index'\n\nexport function initState(vm) {\n    const opts = vm.$options // 获取所有的选项\n    if (opts.data) {\n        initData(vm) // 初始化数据\n    }\n}\n\nfunction proxy(vm, target, key) {\n    // vm.name --> vm._data.name\n    Object.defineProperty(vm, key, {\n        get() {\n            return vm[target][key]\n        },\n        set(newValue) {\n            vm[target][key] = newValue\n        }\n    })\n}\n\nfunction initData(vm) {\n    let data = vm.$options.data // data 可能是函数和对象\n    data = typeof data === 'function' ? data.call(this) : data\n\n    vm._data = data // 把数据添加到实例的_data上\n    // 对数据进行劫持 vue2里采用了一个API：Object.defineProperty\n    observe(data)\n\n    // 将vm._data 用vm来代理\n    for (let key in data) {\n        proxy(vm, '_data', key)\n    }\n}\n","import { compileToFunction } from './compiler'\nimport { mountComponent } from './lifecycle'\nimport { initState } from './state'\n\n// 用来给Vue增加init方法\nexport function initMixin(Vue) {\n    // 用于初始化操作\n    Vue.prototype._init = function (options) {\n        // vue vm.$options 就是获取用户的配置\n\n        // 我们使用vue的时候，以$开头的（$nextTick, $data, $attr）是vue内置属性\n        const vm = this\n        vm.$options = options // 将用户的选项挂载到实例上\n\n        // 初始化状态\n        initState(vm)\n\n        if (options.el) {\n            vm.$mount(options.el) // 实现数据的挂载\n        }\n    }\n\n    Vue.prototype.$mount = function (el) {\n        const vm = this\n        el = document.querySelector(el)\n        let ops = vm.$options\n        // 先进行查找有没有render函数\n        if (!ops.render) {\n            let template // 没有render看一下是否写了template，没写template才有外部的template\n            // 没写模版但是写了el\n            if (!ops.template && el) {\n                template = el.outerHTML\n            } else {\n                if (el) {\n                    template = ops.template\n                }\n            }\n            // 写了template，就有写了的template\n            if (template) {\n                // 这里需要对模版进行编译\n                const render = compileToFunction(template)\n                ops.render = render\n            }\n            // console.log(template)\n        }\n\n        mountComponent(vm, el) // 组件的挂载\n        // 最终就可以获取render方法\n        // script 标签引用的vue.global.js 这个编译过程是在浏览器运行的\n        // runtime是不包括模版编译的，整个是打包的时候通过loader来转义.vue文件的，用runtime的时候不能使用template\n        console.log(ops.render)\n    }\n}\n","import { initMixin } from './init'\nimport { initLifeCycle } from './lifecycle'\n\n// options是用户的选项\nfunction Vue(options) {\n    this._init(options) // 默认调用init\n}\n\ninitMixin(Vue) // 扩展了init方法\ninitLifeCycle(Vue)\n\nexport default Vue\n"],"names":["ncname","qnameCapture","concat","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","ELEMENT_TYPE","TEXT_TYPE","stark","currentParent","root","createASTElement","tag","attrs","type","parent","children","start","node","push","chars","text","replace","end","pop","length","advance","n","substring","parseStartTag","match","tagName","attr","name","value","textEnd","indexOf","startTagMatch","endTagMatch","genProps","str","_loop","i","obj","split","forEach","item","_item$split","_item$split2","_slicedToArray","key","JSON","stringify","slice","defaultTagRE","gen","codegen","test","tokens","lastIndex","exec","index","trim","join","genChildren","el","map","child","ast","code","compileToFunction","template","render","Function","initLifeCycle","Vue","prototype","_update","console","log","_render","mountComponent","vm","oldArrayProto","Array","newArrayProto","Object","create","methods","method","_oldArrayProto$method","_len","arguments","args","_key","result","call","apply","inserted","ob","__ob__","observeArray","Observer","data","_classCallCheck","defineProperty","enumerable","isArray","__proto__","walk","_createClass","keys","defineReactive","observe","target","get","set","newValue","_typeof","initState","opts","$options","initData","proxy","_data","initMixin","_init","options","$mount","document","querySelector","ops","outerHTML"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAA,IAAMA,MAAM,GAAiC,8BAAA,CAAA;EAC7C,IAAMC,YAAY,UAAAC,MAAA,CAAUF,MAAM,EAAAE,OAAAA,CAAAA,CAAAA,MAAA,CAAQF,MAAM,EAAG,GAAA,CAAA,CAAA;EACnD,IAAMG,YAAY,GAAG,IAAIC,MAAM,MAAAF,MAAA,CAAMD,YAAY,CAAA,CAAG,CAAC;EACrD,IAAMI,MAAM,GAAG,IAAID,MAAM,SAAAF,MAAA,CAASD,YAAY,EAAA,QAAA,CAAA,CAAS,CAAC;EACxD,IAAMK,SAAS,GAAG,2EAA2E,CAAC;EAC9F,IAAMC,aAAa,GAAG,YAAY,CAAC;;EAE5B,SAASC,SAASA,CAACC,IAAI,EAAE;IAC5B,IAAMC,YAAY,GAAG,CAAC,CAAA;IACtB,IAAMC,SAAS,GAAG,CAAC,CAAA;IACnB,IAAMC,KAAK,GAAG,EAAE,CAAC;EACjB,EAAA,IAAIC,aAAa,CAAC;EAClB,EAAA,IAAIC,IAAI,CAAC;;EAET;;EAEA,EAAA,SAASC,gBAAgBA,CAACC,GAAG,EAAEC,KAAK,EAAE;MAClC,OAAO;EACHD,MAAAA,GAAG,EAAHA,GAAG;EACHE,MAAAA,IAAI,EAAER,YAAY;EAClBS,MAAAA,MAAM,EAAE,IAAI;EACZC,MAAAA,QAAQ,EAAE,EAAE;EACZH,MAAAA,KAAK,EAALA,KAAAA;OACH,CAAA;EACL,GAAA;EAEA,EAAA,SAASI,KAAKA,CAACL,GAAG,EAAEC,KAAK,EAAE;MACvB,IAAIK,IAAI,GAAGP,gBAAgB,CAACC,GAAG,EAAEC,KAAK,CAAC,CAAC;EACxC;MACA,IAAI,CAACH,IAAI,EAAE;QACPA,IAAI,GAAGQ,IAAI,CAAC;EAChB,KAAA;;EACA,IAAA,IAAIT,aAAa,EAAE;QACfS,IAAI,CAACH,MAAM,GAAGN,aAAa,CAAA;EAC3BA,MAAAA,aAAa,CAACO,QAAQ,CAACG,IAAI,CAACD,IAAI,CAAC,CAAA;EACrC,KAAA;EAEAV,IAAAA,KAAK,CAACW,IAAI,CAACD,IAAI,CAAC,CAAA;MAChBT,aAAa,GAAGS,IAAI,CAAC;EACzB,GAAA;;IACA,SAASE,KAAKA,CAACC,IAAI,EAAE;EACjB;MACAA,IAAI,GAAGA,IAAI,CAACC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;EAC/BD,IAAAA,IAAI,IACAZ,aAAa,CAACO,QAAQ,CAACG,IAAI,CAAC;EACxBL,MAAAA,IAAI,EAAEP,SAAS;EACfc,MAAAA,IAAI,EAAJA,IAAI;EACJN,MAAAA,MAAM,EAAEN,aAAAA;EACZ,KAAC,CAAC,CAAA;EACV,GAAA;IACA,SAASc,GAAGA,CAACX,GAAG,EAAE;EACd,IAAWJ,KAAK,CAACgB,GAAG,GAAG;MACvBf,aAAa,GAAGD,KAAK,CAACA,KAAK,CAACiB,MAAM,GAAG,CAAC,CAAC,CAAA;EAC3C,GAAA;IACA,SAASC,OAAOA,CAACC,CAAC,EAAE;EAChBtB,IAAAA,IAAI,GAAGA,IAAI,CAACuB,SAAS,CAACD,CAAC,CAAC,CAAA;EAC5B,GAAA;IACA,SAASE,aAAaA,GAAG;EACrB,IAAA,IAAMZ,KAAK,GAAGZ,IAAI,CAACyB,KAAK,CAAC/B,YAAY,CAAC,CAAA;EACtC,IAAA,IAAIkB,KAAK,EAAE;EACP,MAAA,IAAMa,KAAK,GAAG;EACVC,QAAAA,OAAO,EAAEd,KAAK,CAAC,CAAC,CAAC;EAAE;EACnBJ,QAAAA,KAAK,EAAE,EAAA;SACV,CAAA;EACDa,MAAAA,OAAO,CAACT,KAAK,CAAC,CAAC,CAAC,CAACQ,MAAM,CAAC,CAAA;;EAExB;QACA,IAAIO,IAAI,EAAET,IAAG,CAAA;QACb,OACI,EAAEA,IAAG,GAAGlB,IAAI,CAACyB,KAAK,CAAC3B,aAAa,CAAC,CAAC,KACjC6B,IAAI,GAAG3B,IAAI,CAACyB,KAAK,CAAC5B,SAAS,CAAC,CAAC,EAChC;EACEwB,QAAAA,OAAO,CAACM,IAAI,CAAC,CAAC,CAAC,CAACP,MAAM,CAAC,CAAA;EACvBK,QAAAA,KAAK,CAACjB,KAAK,CAACM,IAAI,CAAC;EACbc,UAAAA,IAAI,EAAED,IAAI,CAAC,CAAC,CAAC;EACbE,UAAAA,KAAK,EAAEF,IAAI,CAAC,CAAC,CAAC,IAAIA,IAAI,CAAC,CAAC,CAAC,IAAIA,IAAI,CAAC,CAAC,CAAA;EACvC,SAAC,CAAC,CAAA;EACN,OAAA;EAEA,MAAA,IAAIT,IAAG,EAAE;EACLG,QAAAA,OAAO,CAACH,IAAG,CAAC,CAAC,CAAC,CAACE,MAAM,CAAC,CAAA;EAC1B,OAAA;EACA,MAAA,OAAOK,KAAK,CAAA;EAChB,KAAA;EAEA,IAAA,OAAO,KAAK,CAAC;EACjB,GAAA;;EACA,EAAA,OAAOzB,IAAI,EAAE;EACT;EACA;EACA;MACA,IAAI8B,OAAO,GAAG9B,IAAI,CAAC+B,OAAO,CAAC,GAAG,CAAC,CAAC;;MAEhC,IAAID,OAAO,KAAK,CAAC,EAAE;QACf,IAAME,aAAa,GAAGR,aAAa,EAAE,CAAA;EAErC,MAAA,IAAIQ,aAAa,EAAE;UACfpB,KAAK,CAACoB,aAAa,CAACN,OAAO,EAAEM,aAAa,CAACxB,KAAK,CAAC,CAAA;EACjD;EACA,QAAA,SAAA;EACJ,OAAA;EACA,MAAA,IAAIyB,WAAW,GAAGjC,IAAI,CAACyB,KAAK,CAAC7B,MAAM,CAAC,CAAA;EACpC,MAAA,IAAIqC,WAAW,EAAE;EACbZ,QAAAA,OAAO,CAACY,WAAW,CAAC,CAAC,CAAC,CAACb,MAAM,CAAC,CAAA;EAC9BF,QAAAA,GAAG,CAACe,WAAW,CAAC,CAAC,CAAC,CAAC,CAAA;EACnB,QAAA,SAAA;EACJ,OAAA;EACJ,KAAA;MAEA,IAAIH,OAAO,GAAG,CAAC,EAAE;QACb,IAAId,IAAI,GAAGhB,IAAI,CAACuB,SAAS,CAAC,CAAC,EAAEO,OAAO,CAAC,CAAC;EACtC,MAAA,IAAId,IAAI,EAAE;EACNK,QAAAA,OAAO,CAACL,IAAI,CAACI,MAAM,CAAC,CAAC;UACrBL,KAAK,CAACC,IAAI,CAAC,CAAA;EACf,OAAA;EACJ,KAAA;EACJ,GAAA;EAEA,EAAA,OAAOX,IAAI,CAAA;EACf;;ECrHA,SAAS6B,QAAQA,CAAC1B,KAAK,EAAE;IACrB,IAAI2B,GAAG,GAAG,EAAE,CAAA;IAAA,IAAAC,KAAA,GAAAA,SAAAA,KAAAA,GAC2B;EACnC,IAAA,IAAIT,IAAI,GAAGnB,KAAK,CAAC6B,CAAC,CAAC,CAAA;EACnB,IAAA,IAAIV,IAAI,CAACC,IAAI,KAAK,OAAO,EAAE;EACvB;QACA,IAAIU,GAAG,GAAG,EAAE,CAAA;EACZX,MAAAA,IAAI,CAACE,KAAK,CAACU,KAAK,CAAC,GAAG,CAAC,CAACC,OAAO,CAAC,UAACC,IAAI,EAAK;EACpC,QAAA,IAAAC,WAAA,GAAmBD,IAAI,CAACF,KAAK,CAAC,GAAG,CAAC;YAAAI,YAAA,GAAAC,cAAA,CAAAF,WAAA,EAAA,CAAA,CAAA;EAA7BG,UAAAA,GAAG,GAAAF,YAAA,CAAA,CAAA,CAAA;EAAEd,UAAAA,KAAK,GAAAc,YAAA,CAAA,CAAA,CAAA,CAAA;EACfL,QAAAA,GAAG,CAACO,GAAG,CAAC,GAAGhB,KAAK,CAAA;EACpB,OAAC,CAAC,CAAA;QACFF,IAAI,CAACE,KAAK,GAAGS,GAAG,CAAA;EACpB,KAAA;EACAH,IAAAA,GAAG,OAAA1C,MAAA,CAAOkC,IAAI,CAACC,IAAI,EAAAnC,GAAAA,CAAAA,CAAAA,MAAA,CAAIqD,IAAI,CAACC,SAAS,CAACpB,IAAI,CAACE,KAAK,CAAC,EAAG,GAAA,CAAA,CAAA;KACvD,CAAA;EAZD,EAAA,KAAK,IAAIQ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG7B,KAAK,CAACY,MAAM,EAAEiB,CAAC,EAAE,EAAA;MAAAD,KAAA,EAAA,CAAA;EAAA,GAAA;IAcrC,OAAA3C,GAAAA,CAAAA,MAAA,CAAW0C,GAAG,CAACa,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAA,GAAA,CAAA,CAAA;EAC/B,CAAA;EAEA,IAAMC,YAAY,GAAG,0BAA0B,CAAC;EAChD,SAASC,GAAGA,CAACrC,IAAI,EAAE;EACf,EAAA,IAAIA,IAAI,CAACJ,IAAI,KAAK,CAAC,EAAE;MACjB,OAAO0C,OAAO,CAACtC,IAAI,CAAC,CAAA;EACxB,GAAC,MAAM;EACH,IAAA,IAAIG,IAAI,GAAGH,IAAI,CAACG,IAAI,CAAA;EACpB,IAAA,IAAI,CAACiC,YAAY,CAACG,IAAI,CAACpC,IAAI,CAAC,EAAE;EAC1B,MAAA,OAAA,KAAA,CAAAvB,MAAA,CAAaqD,IAAI,CAACC,SAAS,CAAC/B,IAAI,CAAC,EAAA,GAAA,CAAA,CAAA;EACrC,KAAC,MAAM;QACH,IAAIqC,MAAM,GAAG,EAAE,CAAA;EACf,MAAA,IAAI5B,KAAK,CAAA;QACTwB,YAAY,CAACK,SAAS,GAAG,CAAC,CAAA;QAC1B,IAAIA,SAAS,GAAG,CAAC,CAAA;QACjB,OAAQ7B,KAAK,GAAGwB,YAAY,CAACM,IAAI,CAACvC,IAAI,CAAC,EAAG;EACtC,QAAA,IAAIwC,KAAK,GAAG/B,KAAK,CAAC+B,KAAK,CAAA;UACvB,IAAIA,KAAK,GAAGF,SAAS,EAAE;EACnBD,UAAAA,MAAM,CAACvC,IAAI,CAACgC,IAAI,CAACC,SAAS,CAAC/B,IAAI,CAACgC,KAAK,CAACM,SAAS,EAAEE,KAAK,CAAC,CAAC,CAAC,CAAA;EAC7D,SAAA;EACAH,QAAAA,MAAM,CAACvC,IAAI,CAAArB,KAAAA,CAAAA,MAAA,CAAOgC,KAAK,CAAC,CAAC,CAAC,CAACgC,IAAI,EAAE,EAAI,GAAA,CAAA,CAAA,CAAA;UACrCH,SAAS,GAAGE,KAAK,GAAG/B,KAAK,CAAC,CAAC,CAAC,CAACL,MAAM,CAAA;EACvC,OAAA;EAEA,MAAA,IAAIkC,SAAS,GAAGtC,IAAI,CAACI,MAAM,EAAE;EACzBiC,QAAAA,MAAM,CAACvC,IAAI,CAACgC,IAAI,CAACC,SAAS,CAAC/B,IAAI,CAACgC,KAAK,CAACM,SAAS,CAAC,CAAC,CAAC,CAAA;EACtD,OAAA;EAEA,MAAA,OAAA,KAAA,CAAA7D,MAAA,CAAa4D,MAAM,CAACK,IAAI,CAAC,GAAG,CAAC,EAAA,GAAA,CAAA,CAAA;EACjC,KAAA;EACJ,GAAA;EACJ,CAAA;EAEA,SAASC,WAAWA,CAACC,EAAE,EAAE;EACrB,EAAA,IAAMjD,QAAQ,GAAGiD,EAAE,CAACjD,QAAQ,CAAA;EAC5B,EAAA,IAAIA,QAAQ,EAAE;EACV,IAAA,OAAOA,QAAQ,CAACkD,GAAG,CAAC,UAACC,KAAK,EAAA;QAAA,OAAKZ,GAAG,CAACY,KAAK,CAAC,CAAA;EAAA,KAAA,CAAC,CAACJ,IAAI,CAAC,GAAG,CAAC,CAAA;EACxD,GAAA;EACJ,CAAA;EAEA,SAASP,OAAOA,CAACY,GAAG,EAAE;EAClB,EAAA,IAAIpD,QAAQ,GAAGgD,WAAW,CAACI,GAAG,CAAC,CAAA;EAC/B,EAAA,IAAIC,IAAI,GAAAvE,MAAAA,CAAAA,MAAA,CAAUsE,GAAG,CAACxD,GAAG,EAAAd,KAAAA,CAAAA,CAAAA,MAAA,CACrBsE,GAAG,CAACvD,KAAK,CAACY,MAAM,GAAG,CAAC,GAAGc,QAAQ,CAAC6B,GAAG,CAACvD,KAAK,CAAC,GAAG,MAAM,CAAAf,CAAAA,MAAA,CACpDsE,GAAG,CAACpD,QAAQ,CAACS,MAAM,GAAA3B,GAAAA,CAAAA,MAAA,CAAOkB,QAAQ,CAAA,GAAK,EAAE,EAAG,GAAA,CAAA,CAAA;EAC/C,EAAA,OAAOqD,IAAI,CAAA;EACf,CAAA;;EAEA;EACO,SAASC,iBAAiBA,CAACC,QAAQ,EAAE;EACxC;EACA,EAAA,IAAIH,GAAG,GAAGhE,SAAS,CAACmE,QAAQ,CAAC,CAAA;;EAE7B;EACA;EACA,EAAA,IAAIF,IAAI,GAAGb,OAAO,CAACY,GAAG,CAAC,CAAA;EACvBC,EAAAA,IAAI,GAAAvE,oBAAAA,CAAAA,MAAA,CAAwBuE,IAAI,EAAG,GAAA,CAAA,CAAA;EACnC,EAAA,IAAIG,MAAM,GAAG,IAAIC,QAAQ,CAACJ,IAAI,CAAC,CAAC;;EAEhC,EAAA,OAAOG,MAAM,CAAA;EACjB;;EC/EO,SAASE,aAAaA,CAACC,GAAG,EAAE;EAC/BA,EAAAA,GAAG,CAACC,SAAS,CAACC,OAAO,GAAG,YAAY;EAChCC,IAAAA,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC,CAAA;KACxB,CAAA;EACDJ,EAAAA,GAAG,CAACC,SAAS,CAACI,OAAO,GAAG,YAAY;EAChCF,IAAAA,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC,CAAA;KACxB,CAAA;EACL,CAAA;EAEO,SAASE,cAAcA,CAACC,EAAE,EAAEjB,EAAE,EAAE;EACnC;;IAEAiB,EAAE,CAACL,OAAO,CAACK,EAAE,CAACF,OAAO,EAAE,CAAC,CAAC;;EAEzB;;EAEA;EACJ,CAAA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EC5BA;;EAEA,IAAIG,aAAa,GAAGC,KAAK,CAACR,SAAS,CAAC;;EAEpC;EACO,IAAIS,aAAa,GAAGC,MAAM,CAACC,MAAM,CAACJ,aAAa,CAAC,CAAA;;EAEvD;EACA,IAAIK,OAAO,GAAG,CAAC,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,SAAS,EAAE,SAAS,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAA;EAE9EA,OAAO,CAAC3C,OAAO,CAAC,UAAC4C,MAAM,EAAK;EACxB;EACAJ,EAAAA,aAAa,CAACI,MAAM,CAAC,GAAG,YAAmB;EAAA,IAAA,IAAAC,qBAAA,CAAA;EAAA,IAAA,KAAA,IAAAC,IAAA,GAAAC,SAAA,CAAAnE,MAAA,EAANoE,IAAI,GAAAT,IAAAA,KAAA,CAAAO,IAAA,GAAAG,IAAA,GAAA,CAAA,EAAAA,IAAA,GAAAH,IAAA,EAAAG,IAAA,EAAA,EAAA;EAAJD,MAAAA,IAAI,CAAAC,IAAA,CAAAF,GAAAA,SAAA,CAAAE,IAAA,CAAA,CAAA;EAAA,KAAA;MACrC,IAAMC,MAAM,GAAG,CAAAL,qBAAA,GAAAP,aAAa,CAACM,MAAM,CAAC,EAACO,IAAI,CAAAC,KAAA,CAAAP,qBAAA,EAAC,CAAA,IAAI,EAAA5F,MAAA,CAAK+F,IAAI,CAAA,CAAC,CAAC;;EAEzD;EACA,IAAA,IAAIK,QAAQ,CAAA;EACZ,IAAA,IAAIC,EAAE,GAAG,IAAI,CAACC,MAAM,CAAA;EACpB,IAAA,QAAQX,MAAM;EACV,MAAA,KAAK,MAAM,CAAA;EACX,MAAA,KAAK,SAAS;EACVS,QAAAA,QAAQ,GAAGL,IAAI,CAAA;EACf,QAAA,MAAA;EACJ,MAAA,KAAK,QAAQ;EACTK,QAAAA,QAAQ,GAAGL,IAAI,CAACxC,KAAK,CAAC,CAAC,CAAC,CAAA;EAEnB,KAAA;EAEb;EACA,IAAA,IAAI6C,QAAQ,EAAE;EACV;EACAC,MAAAA,EAAE,CAACE,YAAY,CAACH,QAAQ,CAAC,CAAA;EAC7B,KAAA;EAEA,IAAA,OAAOH,MAAM,CAAA;KAChB,CAAA;EACL,CAAC,CAAC;;ECpCqC,IAEjCO,QAAQ,gBAAA,YAAA;IACV,SAAAA,QAAAA,CAAYC,IAAI,EAAE;EAAAC,IAAAA,eAAA,OAAAF,QAAA,CAAA,CAAA;EACd;EACAhB,IAAAA,MAAM,CAACmB,cAAc,CAACF,IAAI,EAAE,QAAQ,EAAE;EAClCrE,MAAAA,KAAK,EAAE,IAAI;QACXwE,UAAU,EAAE,KAAK;EACrB,KAAC,CAAC,CAAA;;EAEF;EACA;EACA,IAAA,IAAItB,KAAK,CAACuB,OAAO,CAACJ,IAAI,CAAC,EAAE;EACrB;;EAEAA,MAAAA,IAAI,CAACK,SAAS,GAAGvB,aAAa,CAAC;EAC/B,MAAA,IAAI,CAACgB,YAAY,CAACE,IAAI,CAAC,CAAC;EAC5B,KAAC,MAAM;EACH,MAAA,IAAI,CAACM,IAAI,CAACN,IAAI,CAAC,CAAA;EACnB,KAAA;EACJ,GAAA;EACA;EAAAO,EAAAA,YAAA,CAAAR,QAAA,EAAA,CAAA;MAAApD,GAAA,EAAA,MAAA;EAAAhB,IAAAA,KAAA,EACA,SAAA2E,IAAKN,CAAAA,IAAI,EAAE;EACP;QACAjB,MAAM,CAACyB,IAAI,CAACR,IAAI,CAAC,CAAC1D,OAAO,CAAC,UAACK,GAAG,EAAA;UAAA,OAAK8D,cAAc,CAACT,IAAI,EAAErD,GAAG,EAAEqD,IAAI,CAACrD,GAAG,CAAC,CAAC,CAAA;SAAC,CAAA,CAAA;EAC5E,KAAA;EACA;EAAA,GAAA,EAAA;MAAAA,GAAA,EAAA,cAAA;EAAAhB,IAAAA,KAAA,EACA,SAAAmE,YAAaE,CAAAA,IAAI,EAAE;EACfA,MAAAA,IAAI,CAAC1D,OAAO,CAAC,UAACC,IAAI,EAAA;UAAA,OAAKmE,OAAO,CAACnE,IAAI,CAAC,CAAA;SAAC,CAAA,CAAA;EACzC,KAAA;EAAC,GAAA,CAAA,CAAA,CAAA;EAAA,EAAA,OAAAwD,QAAA,CAAA;EAAA,CAGL,EAAA,CAAA;EACO,SAASU,cAAcA,CAACE,MAAM,EAAEhE,GAAG,EAAEhB,KAAK,EAAE;IAC/C+E,OAAO,CAAC/E,KAAK,CAAC,CAAC;EACfoD,EAAAA,MAAM,CAACmB,cAAc,CAACS,MAAM,EAAEhE,GAAG,EAAE;EAC/B;MACAiE,GAAG,EAAA,SAAAA,MAAG;QACFrC,OAAO,CAACC,GAAG,CAAC,KAAK,EAAE7B,GAAG,EAAEhB,KAAK,CAAC,CAAA;EAC9B,MAAA,OAAOA,KAAK,CAAA;OACf;EACD;MACAkF,GAAG,EAAA,SAAAA,GAACC,CAAAA,QAAQ,EAAE;EACV,MAAA,IAAIA,QAAQ,KAAKnF,KAAK,EAAE,OAAM;QAC9B+E,OAAO,CAACI,QAAQ,CAAC,CAAC;EAClBnF,MAAAA,KAAK,GAAGmF,QAAQ,CAAA;EACpB,KAAA;EACJ,GAAC,CAAC,CAAA;EACN,CAAA;;EAEA;EACO,SAASJ,OAAOA,CAACV,IAAI,EAAE;EAC1B;IACA,IAAIe,OAAA,CAAOf,IAAI,CAAA,KAAK,QAAQ,IAAIA,IAAI,IAAI,IAAI,EAAE;EAC1C,IAAA,OAAA;EACJ,GAAA;;EAEA;EACA,EAAA,IAAIA,IAAI,CAACH,MAAM,YAAYE,QAAQ,EAAE;EACjC,IAAA,OAAA;EACJ,GAAA;;EAEA;EACA,EAAA,OAAO,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAA;EAC7B;;EC9DO,SAASgB,SAASA,CAACrC,EAAE,EAAE;EAC1B,EAAA,IAAMsC,IAAI,GAAGtC,EAAE,CAACuC,QAAQ,CAAC;IACzB,IAAID,IAAI,CAACjB,IAAI,EAAE;MACXmB,QAAQ,CAACxC,EAAE,CAAC,CAAC;EACjB,GAAA;EACJ,CAAA;;EAEA,SAASyC,KAAKA,CAACzC,EAAE,EAAEgC,MAAM,EAAEhE,GAAG,EAAE;EAC5B;EACAoC,EAAAA,MAAM,CAACmB,cAAc,CAACvB,EAAE,EAAEhC,GAAG,EAAE;MAC3BiE,GAAG,EAAA,SAAAA,MAAG;EACF,MAAA,OAAOjC,EAAE,CAACgC,MAAM,CAAC,CAAChE,GAAG,CAAC,CAAA;OACzB;MACDkE,GAAG,EAAA,SAAAA,GAACC,CAAAA,QAAQ,EAAE;EACVnC,MAAAA,EAAE,CAACgC,MAAM,CAAC,CAAChE,GAAG,CAAC,GAAGmE,QAAQ,CAAA;EAC9B,KAAA;EACJ,GAAC,CAAC,CAAA;EACN,CAAA;EAEA,SAASK,QAAQA,CAACxC,EAAE,EAAE;EAClB,EAAA,IAAIqB,IAAI,GAAGrB,EAAE,CAACuC,QAAQ,CAAClB,IAAI,CAAC;EAC5BA,EAAAA,IAAI,GAAG,OAAOA,IAAI,KAAK,UAAU,GAAGA,IAAI,CAACP,IAAI,CAAC,IAAI,CAAC,GAAGO,IAAI,CAAA;EAE1DrB,EAAAA,EAAE,CAAC0C,KAAK,GAAGrB,IAAI,CAAC;EAChB;IACAU,OAAO,CAACV,IAAI,CAAC,CAAA;;EAEb;EACA,EAAA,KAAK,IAAIrD,GAAG,IAAIqD,IAAI,EAAE;EAClBoB,IAAAA,KAAK,CAACzC,EAAE,EAAE,OAAO,EAAEhC,GAAG,CAAC,CAAA;EAC3B,GAAA;EACJ;;EC7BA;EACO,SAAS2E,SAASA,CAAClD,GAAG,EAAE;EAC3B;EACAA,EAAAA,GAAG,CAACC,SAAS,CAACkD,KAAK,GAAG,UAAUC,OAAO,EAAE;EACrC;;EAEA;MACA,IAAM7C,EAAE,GAAG,IAAI,CAAA;EACfA,IAAAA,EAAE,CAACuC,QAAQ,GAAGM,OAAO,CAAC;;EAEtB;MACAR,SAAS,CAACrC,EAAE,CAAC,CAAA;MAEb,IAAI6C,OAAO,CAAC9D,EAAE,EAAE;EACZiB,MAAAA,EAAE,CAAC8C,MAAM,CAACD,OAAO,CAAC9D,EAAE,CAAC,CAAC;EAC1B,KAAA;KACH,CAAA;;EAEDU,EAAAA,GAAG,CAACC,SAAS,CAACoD,MAAM,GAAG,UAAU/D,EAAE,EAAE;MACjC,IAAMiB,EAAE,GAAG,IAAI,CAAA;EACfjB,IAAAA,EAAE,GAAGgE,QAAQ,CAACC,aAAa,CAACjE,EAAE,CAAC,CAAA;EAC/B,IAAA,IAAIkE,GAAG,GAAGjD,EAAE,CAACuC,QAAQ,CAAA;EACrB;EACA,IAAA,IAAI,CAACU,GAAG,CAAC3D,MAAM,EAAE;EACb,MAAA,IAAID,QAAQ,CAAC;EACb;EACA,MAAA,IAAI,CAAC4D,GAAG,CAAC5D,QAAQ,IAAIN,EAAE,EAAE;UACrBM,QAAQ,GAAGN,EAAE,CAACmE,SAAS,CAAA;EAC3B,OAAC,MAAM;EACH,QAAA,IAAInE,EAAE,EAAE;YACJM,QAAQ,GAAG4D,GAAG,CAAC5D,QAAQ,CAAA;EAC3B,SAAA;EACJ,OAAA;EACA;EACA,MAAA,IAAIA,QAAQ,EAAE;EACV;EACA,QAAA,IAAMC,MAAM,GAAGF,iBAAiB,CAACC,QAAQ,CAAC,CAAA;UAC1C4D,GAAG,CAAC3D,MAAM,GAAGA,MAAM,CAAA;EACvB,OAAA;EACA;EACJ,KAAA;;EAEAS,IAAAA,cAAc,CAACC,EAAM,CAAC,CAAC;EACvB;EACA;EACA;EACAJ,IAAAA,OAAO,CAACC,GAAG,CAACoD,GAAG,CAAC3D,MAAM,CAAC,CAAA;KAC1B,CAAA;EACL;;ECjDA;EACA,SAASG,GAAGA,CAACoD,OAAO,EAAE;EAClB,EAAA,IAAI,CAACD,KAAK,CAACC,OAAO,CAAC,CAAC;EACxB,CAAA;;EAEAF,SAAS,CAAClD,GAAG,CAAC,CAAC;EACfD,aAAa,CAACC,GAAG,CAAC;;;;;;;;"}